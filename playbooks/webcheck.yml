---
- name: check services via http(s) gets (depends on group_vars/meth*)
  gather_facts: no
  hosts: "*idx*"
  connection: local
  vars:
    servletport:
      main: 31
      inout: 39
      web: 43
      plan: 35
      output: 47
      tools: 56
      mms: 60
      pub: 64
      pub2: 68
      pub3: 72
    idxport: #pay attention, there is little logic in the portnumbers : a full table might be needed. also, they do not necessarily allow remote checking
      dish_action: 200
      dish_port: 201
      alerter1: 010
      alerter1_jmx: 014
      alerter1_http: 018
      alerter2: 011
      alerter2_jmx: 015
      alerter2_http: 019
      alerter3: 012
      alerter3_jmx: 016
      alerter3_http: 020
      alerter4: 013
      alerter4_jmx: 017
      alerter4_http: 021
      adre1_index: 041
      adre1: 042
      adre1_service: 043
      adre2_index: 044
      adre2: 045
      adre2_service: 046
      adre3_index: 047
      adre3: 048
      adre3_service: 049
      adre4_index: 053
      adre4: 054
      adre4_service: 055
      dre1_index: 050
      dre1: 051
      dre1_service: 052
      

  tasks:
  - name: uritest
    #debug: msg="http://{{inventory_hostname}}}:{{portx}}{{portx}}1{{servletport.main}}/manager/html"
    #debug: msg={{item}}
    #debug: var=servletport.{{item}} #works!
    #debug: msg={{servletport[item]}} #also works, needed brackes, you weird ansible you!
    #debug: msg="http://{{inventory_hostname}}}:{{portx}}{{portx}}1{{servletport[item]}}/manager/html" #works! brackets ftw!
    uri: url="http://{{inventory_hostname}}:{{portx}}{{porty}}1{{servletport[item]}}/manager/html" user="admin" password="admin"  #works! brackets ftw!
    with_items: "{{servlets}}"
    register: result
    tags:
    - uri
#  - name: idxservices
#    command: nc -z {{inventory_hostname}} {{portx}}{{porty}}{{idxport[item]}}
#    with_items: "{{idxservices}}"
#    tags:
#    - idx
    
    
#- name: check services via http(s) gets (depends on group_vars/meth*)
#  gather_facts: no
#  hosts: "*db*"
#  connection: local
#  vars:
#    dbport:
#      #naming service is too environment specific, must make group_vars
#      #notification0: is there alogic behind notifier ports?
#      haproxy: 405
#      eomdb1: "001"
#      eomdb2: "002"
#      eomdb3: "003"
#      eomdb4: "004"
#  tasks:
#  - name: dbservices
#    command: nc -z {{inventory_hostname}} {{portx}}{{porty}}{{dbport[item]}}
#    with_items: "{{dbservices}}"
#    tags:
#    - db
## create a new play (with hosts: etc for db servers
    
 #   ignore_errors: True
 # - debug: var=result
 #   when: result|failed
 # - name: reportslack
 #   local_action:
 #     module: slack
 #     token: T0546K0J2/B0DRMVB0F/Ij2VD0JqJmNoJtpVTEKTjDT3
 #     username : " {{ inventory_hostname }} "
 #     msg: "{{item.msg}}"
 #   with_items: "{{result.results}}"
 #   when: item|failed
